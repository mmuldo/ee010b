; PlayNote(f)
; ===========
;
; Description
; -----------
; Plays frequency f in Hz (passed in on r17|r16) over speaker, until this
; function is called again with a different frequency. If f = 0, speaker output
; is turned off.
;
; Operational Description
; -----------------------
; The frequency of the wave generated by timer1 is given by:
;   f = f_clk/(2*prescalar*OCR1A)
; In our case, the timer1 prescalar is 8 and our clk frequency is 8 MHz, thus,
;   OCR1A = 500,000/f
; Thus, this function divides 500,000 (a 24-bit values) by f (a 16-bit value)
; and then stores the result in OCR1A, along with enabling the timer1
; interrupts. If f=0, timer1 interrupts are disabled.
;
; Arguments
; ---------
; f (unsigned int, r17|r16): the frequency to play
;
; Return Values
; -------------
; none
;
; Global Variables
; ----------------
; none
;
; Shared Variables
; ----------------
; none
;
; Local Variables
; ---------------
; none
;
; Inputs
; ------
; none
;
; Outputs
; -------
; speaker
;
; Error Handling
; --------------
; If frequency f is too small (and thus the result of the division can't fit
; into 16 bits for OCR1A), 0xFFFF is stored in OCR1A, resulting in a frequency
; of 7.63 Hz.
;
; Algorithms
; ----------
; none
;
; Data Structures
; ---------------
; none
;
; Registers Used
; --------------
; r16, r17
;
; Stack Depth
; --------------
; [unknown]
;
; Limitations
; -----------
; none
;
; Known Bugs
; ----------
; none
;
; Special Notes
; -------------
; none
;
; Pseudocode
; ----------
;
; IF f == 0:
;   cbi TIMSK, OCIE1A_BIT
;   return
; ENDIF
;
; divisor = f
; dividend = PRESCALED_CLK
; quotient, _ = div24by16(dividend, divisor)
;
; IF high byte of quotient nonzero:
;   quotient = MAX_16BIT
; ENDIF
;
; out OCR1A, quotient
; sbi TIMSK, OCIE1A_BIT
